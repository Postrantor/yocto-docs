---
tip: translate by openai@2023-06-07 21:54:40
...
---
title: Release 2.6 (thud)
---

This section provides migration information for moving to the Yocto Project 2.6 Release (codename \"thud\") from the prior release.

> 此部分提供了从先前版本迁移到Yocto项目2.6发行版（代号“thud”）的迁移信息。

# GCC 8.2 is Now Used by Default {#migration-2.6-gcc-changes}


The GNU Compiler Collection version 8.2 is now used by default for compilation. For more information on what has changed in the GCC 8.x release, see [https://gcc.gnu.org/gcc-8/changes.html](https://gcc.gnu.org/gcc-8/changes.html).

> 现在默认使用GNU编译器集合版本8.2进行编译。有关GCC 8.x发行版中所做更改的更多信息，请参阅[https://gcc.gnu.org/gcc-8/changes.html](https://gcc.gnu.org/gcc-8/changes.html)。


If you still need to compile with version 7.x, GCC 7.3 is also provided. You can select this version by setting the and can be selected by setting the `GCCVERSION`{.interpreted-text role="term"} variable to \"7.%\" in your configuration.

> 如果您仍需要使用版本7.x进行编译，还提供了GCC 7.3。您可以通过在配置中设置`GCCVERSION`变量为“7.%”来选择此版本。

# Removed Recipes {#migration-2.6-removed-recipes}


The following recipes have been removed:

> 以下食谱已被删除：

- *beecrypt*: No longer needed since moving to RPM 4.
- *bigreqsproto*: Replaced by `xorgproto`.
- *calibrateproto*: Removed in favor of `xinput`.
- *compositeproto*: Replaced by `xorgproto`.
- *damageproto*: Replaced by `xorgproto`.
- *dmxproto*: Replaced by `xorgproto`.
- *dri2proto*: Replaced by `xorgproto`.
- *dri3proto*: Replaced by `xorgproto`.
- *eee-acpi-scripts*: Became obsolete.
- *fixesproto*: Replaced by `xorgproto`.
- *fontsproto*: Replaced by `xorgproto`.
- *fstests*: Became obsolete.
- *gccmakedep*: No longer used.
- *glproto*: Replaced by `xorgproto`.
- *gnome-desktop3*: No longer needed. This recipe has moved to `meta-oe`.
- *icon-naming-utils*: No longer used since the Sato theme was removed in 2016.
- *inputproto*: Replaced by `xorgproto`.
- *kbproto*: Replaced by `xorgproto`.
- *libusb-compat*: Became obsolete.
- *libuser*: Became obsolete.

- *libnfsidmap*: No longer an external requirement since `nfs-utils` 2.2.1. `libnfsidmap` is now integrated.

> - *libnfsidmap*：自从`nfs-utils` 2.2.1之后不再是外部要求。`libnfsidmap`现在已经被集成了。
- *libxcalibrate*: No longer needed with `xinput`
- *mktemp*: Became obsolete. The `mktemp` command is provided by both `busybox` and `coreutils`.
- *ossp-uuid*: Is not being maintained and has mostly been replaced by `uuid.h` in `util-linux`.

- *pax-utils*: No longer needed. Previous QA tests that did use this recipe are now done at build time.

> - *pax-utils*：不再需要。之前使用这个配方的QA测试现在是在构建时完成的。
- *pcmciautils*: Became obsolete.
- *pixz*: No longer needed. `xz` now supports multi-threaded compression.
- *presentproto*: Replaced by `xorgproto`.
- *randrproto*: Replaced by `xorgproto`.
- *recordproto*: Replaced by `xorgproto`.
- *renderproto*: Replaced by `xorgproto`.
- *resourceproto*: Replaced by `xorgproto`.
- *scrnsaverproto*: Replaced by `xorgproto`.
- *trace-cmd*: Became obsolete. `perf` replaced this recipe\'s functionally.
- *videoproto*: Replaced by `xorgproto`.
- *wireless-tools*: Became obsolete. Superseded by `iw`.
- *xcmiscproto*: Replaced by `xorgproto`.
- *xextproto*: Replaced by `xorgproto`.
- *xf86dgaproto*: Replaced by `xorgproto`.
- *xf86driproto*: Replaced by `xorgproto`.
- *xf86miscproto*: Replaced by `xorgproto`.
- *xf86-video-omapfb*: Became obsolete. Use kernel modesetting driver instead.
- *xf86-video-omap*: Became obsolete. Use kernel modesetting driver instead.
- *xf86vidmodeproto*: Replaced by `xorgproto`.
- *xineramaproto*: Replaced by `xorgproto`.
- *xproto*: Replaced by `xorgproto`.
- *yasm*: No longer needed since previous usages are now satisfied by `nasm`.

# Packaging Changes {#migration-2.6-packaging-changes}


The following packaging changes have been made:

> 以下包装变更已经完成：

- *cmake*: `cmake.m4` and `toolchain` files have been moved to the main package.
- *iptables*: The `iptables` modules have been split into separate packages.
- *alsa-lib*: `libasound` is now in the main `alsa-lib` package instead of `libasound`.

- *glibc*: `libnss-db` is now in its own package along with a `/var/db/makedbs.sh` script to update databases.

> *glibc*：现在`libnss-db`已经拆分成一个单独的包，并附带一个`/var/db/makedbs.sh`脚本来更新数据库。

- *python and python3*: The main package has been removed from the recipe. You must install specific packages or `python-modules` / `python3-modules` for everything.

> python和python3：主包已从配方中移除。您必须安装特定的软件包或`python-modules`/`python3-modules`才能完成所有操作。
- *systemtap*: Moved `systemtap-exporter` into its own package.

# XOrg Protocol dependencies {#migration-2.6-xorg-protocol-dependencies}


The `*proto` upstream repositories have been combined into one \"xorgproto\" repository. Thus, the corresponding recipes have also been combined into a single `xorgproto` recipe. Any recipes that depend upon the older `*proto` recipes need to be changed to depend on the newer `xorgproto` recipe instead.

> 所有的`proto`上游仓库已经合并到一个"xorgproto"仓库中。因此，相应的食谱也已经合并成一个单一的`xorgproto`食谱。任何依赖于旧`*proto`食谱的食谱都需要改变，以依赖更新的`xorgproto`食谱。


For names of recipes removed because of this repository change, see the `migration-guides/migration-2.6:removed recipes`{.interpreted-text role="ref"} section.

> 对于因此存储库更改而被移除的食谱名称，请参见“迁移指南/迁移2.6：移除食谱”部分。

# `distutils` and `distutils3` Now Prevent Fetching Dependencies During the `do_configure` Task {#migration-2.6-distutils-distutils3-fetching-dependencies}


Previously, it was possible for Python recipes that inherited the `distutils` and `distutils3` classes to fetch code during the `ref-tasks-configure`{.interpreted-text role="ref"} task to satisfy dependencies mentioned in `setup.py` if those dependencies were not provided in the sysroot (i.e. recipes providing the dependencies were missing from `DEPENDS`{.interpreted-text role="term"}).

> 以前，继承`distutils`和`distutils3`类的Python食谱可以在`ref-tasks-configure`任务期间获取代码，以满足`setup.py`中提到的依赖项，如果这些依赖项没有在sysroot中提供（即，提供依赖项的食谱缺少`DEPENDS`）。

::: note
::: title
Note
:::


This change affects classes beyond just the two mentioned (i.e. `distutils` and `distutils3`). Any recipe that inherits `distutils*` classes are affected. For example, the `setuptools` and `ref-classes-setuptools3`{.interpreted-text role="ref"} recipes are affected since they inherit the `distutils*` classes.

> 这种变化不仅影响到前面提及的两个类（即`distutils`和`distutils3`）。任何继承`distutils*`类的配方都会受到影响。例如，`setuptools`和`ref-classes-setuptools3`{.interpreted-text role="ref"}配方受到影响，因为它们继承了`distutils*`类。
:::


Fetching these types of dependencies that are not provided in the sysroot negatively affects the ability to reproduce builds. This type of fetching is now explicitly disabled. Consequently, any missing dependencies in Python recipes that use these classes now result in an error during the `ref-tasks-configure`{.interpreted-text role="ref"} task.

> 抓取系统根目录中没有提供的这些依赖项会影响重现构建的能力。现在已经明确禁用了这种抓取。因此，使用这些类的Python配方中缺少的依赖项现在会在`ref-tasks-configure`{.interpreted-text role="ref"}任务期间导致错误。

# `linux-yocto` Configuration Audit Issues Now Correctly Reported {#migration-2.6-linux-yocto-configuration-audit-issues-now-correctly-reported}


Due to a bug, the kernel configuration audit functionality was not writing out any resulting warnings during the build. This issue is now corrected. You might notice these warnings now if you have a custom kernel configuration with a `linux-yocto` style kernel recipe.

> 由于一个错误，在构建过程中内核配置审计功能没有输出任何警告。现在该问题已经得到纠正。如果您有一个使用`linux-yocto`风格内核配方的自定义内核配置，您可能会注意到这些警告。

# Image/Kernel Artifact Naming Changes {#migration-2.6-image-kernel-artifact-naming-changes}


The following changes have been made:

> 以下变更已被进行：


- Name variables (e.g. `IMAGE_NAME`{.interpreted-text role="term"}) use a new `IMAGE_VERSION_SUFFIX`{.interpreted-text role="term"} variable instead of `DATETIME`{.interpreted-text role="term"}. Using `IMAGE_VERSION_SUFFIX`{.interpreted-text role="term"} allows easier and more direct changes.

> 使用新的`IMAGE_VERSION_SUFFIX`变量来取代`DATETIME`变量。使用`IMAGE_VERSION_SUFFIX`变量可以更容易和更直接地进行更改。


  The `IMAGE_VERSION_SUFFIX`{.interpreted-text role="term"} variable is set in the `bitbake.conf` configuration file as follows:

> `IMAGE_VERSION_SUFFIX` 变量在 `bitbake.conf` 配置文件中设置如下：

  ```
  IMAGE_VERSION_SUFFIX = "-${DATETIME}"
  ```
- Several variables have changed names for consistency:

  ```
  Old Variable Name             New Variable Name
  ========================================================
  KERNEL_IMAGE_BASE_NAME        KERNEL_IMAGE_NAME
  KERNEL_IMAGE_SYMLINK_NAME     KERNEL_IMAGE_LINK_NAME
  MODULE_TARBALL_BASE_NAME      MODULE_TARBALL_NAME
  MODULE_TARBALL_SYMLINK_NAME   MODULE_TARBALL_LINK_NAME
  INITRAMFS_BASE_NAME           INITRAMFS_NAME
  ```

- The `MODULE_IMAGE_BASE_NAME` variable has been removed. The module tarball name is now controlled directly with the `MODULE_TARBALL_NAME`{.interpreted-text role="term"} variable.

> `MODULE_IMAGE_BASE_NAME` 变量已被移除。模块归档文件的名称现在直接由 `MODULE_TARBALL_NAME` 变量控制。

- The `KERNEL_DTB_NAME`{.interpreted-text role="term"} and `KERNEL_DTB_LINK_NAME`{.interpreted-text role="term"} variables have been introduced to control kernel Device Tree Binary (DTB) artifact names instead of mangling `KERNEL_IMAGE_*` variables.

> 引入了`KERNEL_DTB_NAME`{.interpreted-text role="term"}和`KERNEL_DTB_LINK_NAME`{.interpreted-text role="term"}变量，以控制内核设备树二进制（DTB）工件名称，而不是混淆`KERNEL_IMAGE_*`变量。

- The `KERNEL_FIT_NAME`{.interpreted-text role="term"} and `KERNEL_FIT_LINK_NAME`{.interpreted-text role="term"} variables have been introduced to specify the name of flattened image tree (FIT) kernel images similar to other deployed artifacts.

> `KERNEL_FIT_NAME`{.interpreted-text role="term"}和`KERNEL_FIT_LINK_NAME`{.interpreted-text role="term"}这两个变量被引入用来指定压缩后的图像树（FIT）内核图像的名称，就像其他部署的工件一样。

- The `MODULE_TARBALL_NAME`{.interpreted-text role="term"} and `MODULE_TARBALL_LINK_NAME`{.interpreted-text role="term"} variable values no longer include the \"module-\" prefix or \".tgz\" suffix. These parts are now hardcoded so that the values are consistent with other artifact naming variables.

> `MODULE_TARBALL_NAME`{.interpreted-text role="term"} 和 `MODULE_TARBALL_LINK_NAME`{.interpreted-text role="term"} 的变量值不再包含“module-”前缀或“.tgz”后缀。这些部分现在是硬编码的，以便值与其他工件命名变量一致。

- Added the `INITRAMFS_LINK_NAME`{.interpreted-text role="term"} variable so that the symlink can be controlled similarly to other artifact types.

> 新增了`INITRAMFS_LINK_NAME`变量，以便将符号链接与其他工件类型类似地控制。

- `INITRAMFS_NAME`{.interpreted-text role="term"} now uses \"\${PKGE}-\${PKGV}-\${PKGR}-\${MACHINE}\${IMAGE_VERSION_SUFFIX}\" instead of \"\${PV}-\${PR}-\${MACHINE}-\${DATETIME}\", which makes it consistent with other variables.

> `INITRAMFS_NAME` 现在使用“\${PKGE}-\${PKGV}-\${PKGR}-\${MACHINE}\${IMAGE_VERSION_SUFFIX}”，而不是“\${PV}-\${PR}-\${MACHINE}-\${DATETIME}”，这使它与其他变量保持一致。

# `SERIAL_CONSOLE` Deprecated {#migration-2.6-serial-console-deprecated}


The `SERIAL_CONSOLE` variable has been functionally replaced by the `SERIAL_CONSOLES`{.interpreted-text role="term"} variable for some time. With the Yocto Project 2.6 release, `SERIAL_CONSOLE` has been officially deprecated.

> SERIAL_CONSOLE变量已经有一段时间被SERIAL_CONSOLES变量取代了功能。在Yocto Project 2.6发布时，SERIAL_CONSOLE已经正式被弃用。


`SERIAL_CONSOLE` will continue to work as before for the 2.6 release. However, for the sake of future compatibility, it is recommended that you replace all instances of `SERIAL_CONSOLE` with `SERIAL_CONSOLES`{.interpreted-text role="term"}.

> `SERIAL_CONSOLE` 在2.6版本中仍然会继续正常工作。然而，为了确保未来的兼容性，建议您将所有的`SERIAL_CONSOLE`实例替换为`SERIAL_CONSOLES`。

::: note
::: title
Note
:::


The only difference in usage is that `SERIAL_CONSOLES`{.interpreted-text role="term"} expects entries to be separated using semicolons as compared to `SERIAL_CONSOLE`, which expects spaces.

> 只有使用上的不同是，`SERIAL_CONSOLES`需要使用分号来分隔条目，而`SERIAL_CONSOLE`则需要使用空格。
:::

# Configure Script Reports Unknown Options as Errors {#migration-2.6-poky-sets-unknown-configure-option-to-qa-error}


If the configure script reports an unknown option, this now triggers a QA error instead of a warning. Any recipes that previously got away with specifying such unknown options now need to be fixed.

> 如果配置脚本报告未知选项，现在会触发QA错误而不是警告。以前可以指定这些未知选项的食谱现在需要修复。

# Override Changes {#migration-2.6-override-changes}


The following changes have occurred:

> 以下变化已经发生了：


- The `virtclass-native` and `virtclass-nativesdk` Overrides Have Been Removed: The `virtclass-native` and `virtclass-nativesdk` overrides have been deprecated since 2012 in favor of `class-native` and `class-nativesdk`, respectively. Both `virtclass-native` and `virtclass-nativesdk` are now dropped.

> 已经取消了`virtclass-native`和`virtclass-nativesdk`覆盖：自2012年以来，已经弃用了`virtclass-native`和`virtclass-nativesdk`，分别改用`class-native`和`class-nativesdk`。现在已经取消了`virtclass-native`和`virtclass-nativesdk`。

  ::: note
  ::: title

  Note

> 注意
  :::


  The `virtclass-multilib-` overrides for multilib are still valid.

> `virtclass-multilib-`覆盖于多库仍然有效。
  :::

- The `forcevariable` Override Now Has a Higher Priority Than `libc` Overrides: The `forcevariable` override is documented to be the highest priority override. However, due to a long-standing quirk of how `OVERRIDES`{.interpreted-text role="term"} is set, the `libc` overrides (e.g. `libc-glibc`, `libc-musl`, and so forth) erroneously had a higher priority. This issue is now corrected.

> `forcevariable`覆盖现在比`libc`覆盖优先级更高：`forcevariable`覆盖已被文档记录为最高优先级覆盖。然而，由于长期以来`OVERRIDES`{.interpreted-text role="term"}设置的一个缺陷，`libc`覆盖（例如`libc-glibc`，`libc-musl`等）错误地具有更高的优先级。现在这个问题已经得到纠正。


  It is likely this change will not cause any problems. However, it is possible with some unusual configurations that you might see a change in behavior if you were relying on the previous behavior. Be sure to check how you use `forcevariable` and `libc-*` overrides in your custom layers and configuration files to ensure they make sense.

> 这个变化很可能不会带来任何问题。但是，在某些不寻常的配置下，如果您依赖于以前的行为，可能会看到行为的变化。请务必检查您在自定义图层和配置文件中如何使用`forcevariable`和`libc-*`覆盖，以确保它们是有意义的。

- The `build-${BUILD_OS}` Override Has Been Removed: The `build-${BUILD_OS}`, which is typically `build-linux`, override has been removed because building on a host operating system other than a recent version of Linux is neither supported nor recommended. Dropping the override avoids giving the impression that other host operating systems might be supported.

> - 已移除`build-${BUILD_OS}`覆盖：通常为`build-linux`的`build-${BUILD_OS}`覆盖已被移除，因为在除最近版本的Linux之外的主机操作系统上构建是不被支持也不推荐的。移除覆盖可以避免给人以其他主机操作系统可能被支持的印象。

- The \"\_remove\" operator now preserves whitespace. Consequently, when specifying list items to remove, be aware that leading and trailing whitespace resulting from the removal is retained.

> "remove"操作符现在保留空白。因此，在指定要删除的列表项时，请注意由删除产生的前导和尾随空白将被保留。


  See the \"`bitbake-user-manual/bitbake-user-manual-metadata:removal (override style syntax)`{.interpreted-text role="ref"}\" section in the BitBake User Manual for a detailed example.

> 见BitBake用户手册中的“bitbake-user-manual/bitbake-user-manual-metadata：removal（覆盖样式语法）”部分，有详细的示例。

# `systemd` Configuration is Now Split Into `systemd-conf` {#migration-2.6-systemd-configuration-now-split-out-to-system-conf}


The configuration for the `systemd` recipe has been moved into a `system-conf` recipe. Moving this configuration to a separate recipe avoids the `systemd` recipe from becoming machine-specific for cases where machine-specific configurations need to be applied (e.g. for `qemu*` machines).

> 配置文件已经从`systemd`配方移动到`system-conf`配方。将此配置移动到单独的配方可以避免`systemd`配方变得特定于机器，以便在需要应用特定于机器的配置（例如`qemu*`机器）的情况下使用。


Currently, the new recipe packages the following files:

> 目前，新配方包括以下文件：

```
${sysconfdir}/machine-id
${sysconfdir}/systemd/coredump.conf
${sysconfdir}/systemd/journald.conf
${sysconfdir}/systemd/logind.conf
${sysconfdir}/systemd/system.conf
${sysconfdir}/systemd/user.conf
```


If you previously used bbappend files to append the `systemd` recipe to change any of the listed files, you must do so for the `systemd-conf` recipe instead.

> 如果你之前使用bbappend文件来附加`systemd`食谱以更改上述列出的文件，你必须为`systemd-conf`食谱重复此操作。

# Automatic Testing Changes {#migration-2.6-automatic-testing-changes}


This section provides information about automatic testing changes:

> 这一部分提供有关自动测试变更的信息：


- `TEST_IMAGE` Variable Removed: Prior to this release, you set the `TEST_IMAGE` variable to \"1\" to enable automatic testing for successfully built images. The `TEST_IMAGE` variable no longer exists and has been replaced by the `TESTIMAGE_AUTO`{.interpreted-text role="term"} variable.

> 在此发布之前，您可以将`TEST_IMAGE`变量设置为“1”以启用成功构建的图像的自动测试。 `TEST_IMAGE`变量不再存在，已由`TESTIMAGE_AUTO`变量替换。
